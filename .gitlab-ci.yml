stages:
  - build
  - unit-test
  - provider-test
  - package
  - can-i-deploy

build:
  stage: build
  image:
    name: golang:1.17-alpine3.15
  variables:
    GOPATH: ${CI_PROJECT_DIR}/.go
    CGO_ENABLED: 0
  before_script:
    - mkdir -p .go
    - export CGO_ENABLED=0
  script:
    - go mod download
    - GOOS=linux CGO_ENABLED=0 go build

unit-test:
  stage: unit-test
  image:
    name: okonyk/pact-go-ci:1.88.46
  variables:
    GOPATH: ${CI_PROJECT_DIR}/.go
    CGO_ENABLED: 0
  before_script:
    - mkdir -p .go
    - export CGO_ENABLED=0
  script:
    - go mod download
    - go test ./... -tags=unit_test

provider-test:
  stage: provider-test
  image:
    name: okonyk/pact-go-ci:1.88.46
  variables:
    GOPATH: ${CI_PROJECT_DIR}/.go
    CGO_ENABLED: 0
  before_script:
    - mkdir -p .go
    - export CGO_ENABLED=0
  script:
    - go mod download
    - go test ./... -tags=pact

package:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"



