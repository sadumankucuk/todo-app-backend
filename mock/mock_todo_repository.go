// Code generated by MockGen. DO NOT EDIT.
// Source: repository/todo_repository.go

// Package mock_repository is a generated GoMock package.
package mock

import (
	reflect "reflect"
	model "todo/model"

	gomock "github.com/golang/mock/gomock"
)

// MockITodoRepository is a mock of ITodoRepository interface.
type MockITodoRepository struct {
	ctrl     *gomock.Controller
	recorder *MockITodoRepositoryMockRecorder
}

// MockITodoRepositoryMockRecorder is the mock recorder for MockITodoRepository.
type MockITodoRepositoryMockRecorder struct {
	mock *MockITodoRepository
}

// NewMockITodoRepository creates a new mock instance.
func NewMockITodoRepository(ctrl *gomock.Controller) *MockITodoRepository {
	mock := &MockITodoRepository{ctrl: ctrl}
	mock.recorder = &MockITodoRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITodoRepository) EXPECT() *MockITodoRepositoryMockRecorder {
	return m.recorder
}

// CreateTodo mocks base method.
func (m *MockITodoRepository) CreateTodo(newTask model.TodoRequest) (*model.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTodo", newTask)
	ret0, _ := ret[0].(*model.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTodo indicates an expected call of CreateTodo.
func (mr *MockITodoRepositoryMockRecorder) CreateTodo(newTask interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTodo", reflect.TypeOf((*MockITodoRepository)(nil).CreateTodo), newTask)
}

// GetTodoList mocks base method.
func (m *MockITodoRepository) GetTodoList() model.TodoResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTodoList")
	ret0, _ := ret[0].(model.TodoResponse)
	return ret0
}

// GetTodoList indicates an expected call of GetTodoList.
func (mr *MockITodoRepositoryMockRecorder) GetTodoList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTodoList", reflect.TypeOf((*MockITodoRepository)(nil).GetTodoList))
}
